#!/bin/sh
set -e

cd -- "$(dirname "$0")"

# if nix is available, delegate to that, to manage dependencies
if command -v nix-shell >/dev/null && [ -z "$YUBAGE_RUNNING_NIX" ]; then
  export YUBAGE_RUNNING_NIX=1
  exec nix-shell --pure --keep YUBAGE_RUNNING_NIX --run ./run
fi

if ! command -v rage >/dev/null; then
    echo "error: need rage" 1>&2
    exit 1
fi
# TODO we need a post-v0.5.0 commit, not v0.5.0
#
# If you have Nix (https://nixos.org/) installed, you can just run `nix-shell`. If not, try
#
# 	cargo install --git=https://github.com/str4d/rage --rev=9f824625195583c5cff0f48e5bba9b216e1fa3f6 rage
#
# And make sure that's in path.
if [ "$(rage --version)" != "rage 0.5.0" ]; then
    echo "error: need rage v0.5.0" 1>&2
    exit 1
fi

if ! command -v pinentry >/dev/null; then
    echo "error: need pinentry" 1>&2
    exit 1
fi

go build eagain.net/go/yubage/cmd/age-plugin-yubikey
PATH="$PWD:$PATH"

# Tell yubikey-agent, if any, to release the hardware.
if command -v killall >/dev/null; then
    killall --exact -HUP yubikey-agent
fi

# To run against a real Yubikey, these need to match the keys you
# generated on your hardware.
#
# TODO write code to discover these from hardware
recipient=age1yubikey1qd36nn4vku5gk23dvlv528cjqwpdq8ncmq897tttd6qfuc82fmrd6tpr90f
identity=AGE-PLUGIN-YUBIKEY-1V4U6WQYZ7JZVYTCJX7NK9

noise=age1jxy5jlatspett52lfks5n2ja9qt3kxkjhv2juk29qkm7ck444v3syc0uz7
echo hello | rage -r $recipient -r $noise -a >message

# This needs to be in a file, rage won't understand it on the command line.
echo $identity >identity

rage -d -i identity message
